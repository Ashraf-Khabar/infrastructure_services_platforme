services:
  user-management-api:
    build:
      context: .
      dockerfile: UserManagement.API/Dockerfile
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=app-db;Port=5432;Database=user_management;Username=appuser;Password=apppassword
    depends_on:
      app-db:
        condition: service_healthy  # ✅ Attend que la DB soit healthy
    networks:
      - app-network

  user-management-client:
    build:
      context: .
      dockerfile: UserManagement.Client/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - user-management-api
    networks:
      - app-network

  app-db:
      image: postgres:13
      environment:
        - POSTGRES_DB=user_management
        - POSTGRES_USER=appuser
        - POSTGRES_PASSWORD=apppassword
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:  # ✅ Ajoutez un healthcheck
        test: ["CMD-SHELL", "pg_isready -U appuser -d user_management"]
        interval: 5s
        timeout: 5s
        retries: 10
      networks:
        - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: