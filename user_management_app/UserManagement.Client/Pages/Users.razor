@page "/users"
@using MudBlazor
@using UserManagement.Client.Models
@using UserManagement.Client.Services
@inject IUserService UserService
@inject NavigationManager Navigation

<MudGrid>
    <MudItem xs="12" md="8">
        <MudText Typo="Typo.h4" Class="mb-4">Gestion des Utilisateurs</MudText>
    </MudItem>
    <MudItem xs="12" md="4" Class="text-md-right">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" 
                   StartIcon="@Icons.Material.Filled.Add" 
                   OnClick="@(() => Navigation.NavigateTo("/create"))">
            Nouvel Utilisateur
        </MudButton>
    </MudItem>
</MudGrid>

<MudPaper Class="pa-4 mt-4" Elevation="3">
    @if (users.Any())
    {
        <MudTable Items="@users" Hover="true">
            <HeaderContent>
                <MudTh>Nom Complet</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Téléphone</MudTh>
                <MudTh>Statut</MudTh>
                <MudTh>Créé le</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.FirstName @context.LastName</MudTd>
                <MudTd>@context.Email</MudTd>
                <MudTd>@context.PhoneNumber</MudTd>
                <MudTd>
                    <MudChip Color="@(context.IsActive ? Color.Success : Color.Error)" Size="Size.Small">
                        @(context.IsActive ? "Actif" : "Inactif")
                    </MudChip>
                </MudTd>
                <MudTd>@context.CreatedAt.ToString("dd/MM/yyyy")</MudTd>
            </RowTemplate>
        </MudTable>
    }
    else
    {
        <MudText>Aucun utilisateur trouvé</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4"
                   StartIcon="@Icons.Material.Filled.Add" 
                   OnClick="@(() => Navigation.NavigateTo("/create"))">
            Créer le premier utilisateur
        </MudButton>
    }
</MudPaper>

@code {
    private List<User> users = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        users = await UserService.GetUsersAsync();
    }
}