pipeline {
    agent any
    
    environment {
        VENV_PATH = "${WORKSPACE}/venv"
        PATH = "${env.VENV_PATH}/bin:${env.PATH}"
    }
    
    stages {
        stage('Setup Python') {
            steps {
                sh '''
                    # Installation de Python et création de l'environnement virtuel
                    python3 -m venv ${VENV_PATH}
                    source ${VENV_PATH}/bin/activate
                    pip install --upgrade pip
                    
                    # Installation des dépendances système pour psycopg2
                    sudo apt-get update
                    sudo apt-get install -y libpq-dev
                '''
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    source ${VENV_PATH}/bin/activate
                    
                    # Installation des dépendances API et Client
                    pip install -r api/requirements.txt
                    pip install -r client/requirements.txt
                    pip install pytest requests
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                sh '''
                    source ${VENV_PATH}/bin/activate
                    cd tests
                    python -m pytest -v
                '''
            }
        }
        
        stage('Build Docker Images') {
            steps {
                sh '''
                    docker-compose build --no-cache
                '''
            }
        }
        
        stage('Integration Tests') {
            steps {
                sh '''
                    # Démarrage des services
                    docker-compose up -d
                    
                    # Attente du démarrage
                    sleep 20
                    
                    # Tests d'intégration
                    curl -f http://localhost:5002/health || exit 1
                    curl -f http://localhost:5002/users/ || exit 1
                    
                    # Nettoyage
                    docker-compose down
                '''
            }
        }
    }
    
    post {
        always {
            sh 'docker-compose down 2>/dev/null || true'
        }
    }
}